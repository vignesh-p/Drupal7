{"pilotid":0,"name":"Drupal7","code":"PHR_Drupal7","version":"1.0.0","description":"","technology":{"id":"tech-phpdru7","name":"Drupal7","modules":[{"id":"mod_chaos_tool_suite_7.x-1.0-rc1","name":"Chaos tool suite","core":true,"required":false,"docs":[{"content":"This suite is primarily a set of APIs and tools to improve the developer experience. It also contains a module called the Page Manager whose job is to manage pages. In particular it manages panel pages, but as it grows it will be able to manage far more than just Panels.A library of helpful tools by Merlin of Chaos.","type":"HELP_TEXT"},{"content":"This suite is primarily a set of APIs and tools to improve the developer experience. It also contains a module called the Page Manager whose job is to manage pages. In particular it manages panel pages, but as it grows it will be able to manage far more than just Panels..A library of helpful tools by Merlin of Chaos.For the moment, it includes the following tools:\n\n    Plugins -- tools to make it easy for modules to let other modules implement plugins from .inc files.\n    Exportables -- tools to make it easier for modules to have objects that live in database or live in code, such as \u0027default views\u0027.\n    AJAX responder -- tools to make it easier for the server to handle AJAX requests and tell the client what to do with them.\n    Form tools -- tools to make it easier for forms to deal with AJAX.\n    Object caching -- tool to make it easier to edit an object across multiple page requests and cache the editing work.\n    Contexts -- the notion of wrapping objects in a unified wrapper and providing an API to create and accept these contexts as input.\n    Modal dialog -- tool to make it simple to put a form in a modal dialog.\n    Dependent -- a simple form widget to make form items appear and disappear based upon the selections in another item.\n    Content -- pluggable content types used as panes in Panels and other modules like Dashboard.\n    Form wizard -- an API to make multi-step forms much easier.\n    CSS tools -- tools to cache and sanitize CSS easily to make user-input CSS safe.\n","type":"DESCRIPTION"}],"versions":[{"documentsid":0,"version":"7.x-1.0-rc1","url":"/modules/tech-phpdru7/files/mod_chaos_tool_suite_7.x-1.0-rc1/7.x-1.0-rc1/mod_chaos_tool_suite_7.x-1.0-rc1-7.x-1.0-rc1.zip","modulesid":0}]},{"id":"mod_entity_api_7.x-1.0-rc1","name":"Entity API","core":true,"required":false,"docs":[{"content":"Enables modules to work with any entity type and to provide entities.\n\nThis module extends the entity API of Drupal core in order to provide a unified way to deal with entities and their properties. Additionally, it provides an entity CRUD controller, which helps simplifying the creation of new entity types.","type":"HELP_TEXT"},{"content":"It enables modules to work with any entity type and to provide entities.\n\nThis module extends the entity API of Drupal core in order to provide a unified way to deal with entities and their properties. Additionally, it provides an entity CRUD controller, which helps simplifying the creation of new entity types.\n\nFeatures\n\nThis is an API module, so it doesn\u0027t provide any end-user features. However, users may enable the entity tokens module, which provides token replacements for all entity properties that have no tokens and are known to the entity API.\n\nOverview\n\nThe module provides API functions allowing modules to create, save, delete, view or to determine access for any entity, i.e. entity_create(), entity_save(), entity_delete(), entity_view() and entity_access().\n\nThe entity API introduces a unique place for metadata about entity relationships and entity properties: hook_entity_property_info(). This information about entity properties contains the data type and callbacks for how to get and set the data of a property. Modules may rely on this information in order to support any entity property, e.g. Rules and the Search API build upon that.\n\nFurthermore the module provides data wrappers that make use of the available information to provide a simple and unified access to entities and their properties. For usage examples have a look at the README or the provided tests.\n\nBeside that, the module helps you defining a new entity type. For that, it provides an entity controller, which implements full CRUD functionality for your entities. Optionally, entities may be created based on classes derived from the provided Entity class.\n\nThe entity API cares about creating fieldable entities as well as exportable entities, however it does not yet support revisions. Additionally it supports implementing bundle entities, i.e. bundle objects (like node types) for fieldable entities implemented as (exportable) entities, for which the appropriate field API callbacks get automatically invoked.\n\nFor entity types implemented based upon the provided CRUD API the API is providing additional module integration too, i.e. Rules events are provided for all CRUD-related hooks, some basic entity property information for hook_entity_property_info() is provided and exportable entities are automatically integrated with the Features module.\n\nThese module integrations are implemented in separate controller classes, which may be separately overridden or enabled/deactivated.\nOptionally, the entity API also helps providing an administrative interface for managing entities, e.g. the UI for managing profile types of Profile 2 is built with that.\n","type":"DESCRIPTION"}],"versions":[{"documentsid":0,"version":"7.x-1.0-rc1","url":"/modules/tech-phpdru7/files/mod_entity_api_7.x-1.0-rc1/7.x-1.0-rc1/mod_entity_api_7.x-1.0-rc1-7.x-1.0-rc1.zip","modulesid":0}]},{"id":"mod_rules_7.x-2.0-rc2","name":"Rules","core":true,"required":false,"docs":[{"content":"The rules module allows site administrators to define conditionally executed actions based on occurring events (known as reactive or ECA rules). It\u0027s a replacement with more features for the trigger module in core and the successor of the Drupal 5 workflow-ng module.The rules modules allows site administrators to define conditionally executed actions based on occurring events","type":"HELP_TEXT"},{"content":"The rules module allows site administrators to define conditionally executed actions based on occurring events (known as reactive or ECA rules). It\u0027s a replacement with more features for the trigger module in core and the successor of the Drupal 5 workflow-ng module.It allows site administrators to define conditionally executed actions based on occurring events.\n\nFeatures\n\nObviously, you may use reaction rules to react upon any event with custom conditions and actions.\nAllows functionality to be re-used via components (Drupal 6: Rule sets only).\nFlexible scheduling system that allows scheduling any component / action.\nUsers can share their customizations by using the built-in import/export feature. For that the module also integrates with Features.\nModular input evaluation system - for example you can install the Token module and use it in every action.\nThe module has been developed with site performance in mind, so it makes use of caching routines to speed up rule evaluation.\nRules 2.x (Drupal 7 only) features improved APIs, a new admin UI, support for all entity types, parameter configuration via simple data selection (i.e. just pass node:author as argument) and much more. See this blog post for more details.\n","type":"DESCRIPTION"}],"versions":[{"dependentModules":[{"id":"mod_menu_admin_per_menu_7.x-1.0","name":"Menu Admin per Menu","core":true,"required":false,"docs":[{"content":"Allows administrators to customize the site navigation menu.","type":"HELP_TEXT"},{"content":"By default, Drupal allows only users with \"administrer menu permission\" to add, modify or delete menu items.\nIn case you want for instance to let certain users manage primary links or secondary links but not navigation menu, this module provides this functionality.\n\nInstallation\n\nCopy the menu_admin_per_menu folder to your sites/all/modules directory.\nNavigate to admin/build/modules and enable the module\nNavigate to admin/user/permissions and set permissions for each role and each menu: \"administer \u0027menuname\u0027 menu items\"\n\nIf users with \"administer \u0027menuname\u0027 menu items\" permissions don\u0027t have the \"access administration pages\" permission,\nthey will not by default be able to see Navigation\u0027s \"Menus\" item (admin/build/menu).\nSo don\u0027t forget to move this item to the root of Navigation menu or somewhere else it can be seen by those users.\n","type":"DESCRIPTION"}],"versions":[{"documentsid":0,"version":"7.x-1.0","url":"/modules/tech-phpdru7/files/mod_menu_admin_per_menu_7.x-1.0/7.x-1.0/mod_menu_admin_per_menu_7.x-1.0-7.x-1.0.tar.gz","modulesid":0}]}],"documentsid":0,"version":"7.x-2.0-rc2","url":"/modules/tech-phpdru7/files/mod_rules_7.x-2.0-rc2/7.x-2.0-rc2/mod_rules_7.x-2.0-rc2-7.x-2.0-rc2.tar.gz","modulesid":0}]},{"id":"mod_taxonomy_manager_7.x-1.0-beta2","name":"Taxonomy Manager","core":true,"required":false,"docs":[{"content":"This module provides a powerful interface for managing taxonomies. A vocabulary gets displayed in a dynamic tree view, where parent terms can be expanded to list their nested child terms or can be collapsed.","type":"HELP_TEXT"},{"content":"This module provides a powerful interface for managing taxonomies. A vocabulary gets displayed in a dynamic tree view, where parent terms can be expanded to list their nested child terms or can be collapsed.\n\nThe Taxonomy Manager has following operations and key features:\n\n    dynamic treeview\n    mass deleting\n    mass adding of new terms\n    moving of terms in hierarchies\n    merging of terms (using the Term merge module in 7.x)\n    fast weight changing with up and down arrows (and AJAX saving)\n    AJAX powered term editing form\n    simple search interface\n    CSV Export of terms\n    i18n support for multilingual vocabularies (per language terms)\n    Double Tree interface for moving terms in hierarchies, adding new translations and switching terms between different vocabularies\n\nFor using the Taxonomy Manager you should have JavaScript and automatically load of images enabled in your browser.\n\nThis is a Google Summer of Code 2007 project. Read my proposal and my status reports for more information.\n\nTaxonomy Manager Drupal 5 and JQuery Upadate module:\nIn case you are using the JQuery Update module v2.x on your D5 installation, the Taxonomy Manager won\u0027t work. See this issue for more information.\nTo fix the problem download the tree.js file and replace it with the one included in the taxonomy manager folder under /js.\n\nTaxonomy Manager Drupal 6 and Panels 3 / Taxonomy Breadcrumb:\nTaxonomy Manager and other taxonomy modules might conflict, if both try to override the taxonomy/term/% path. Taxonomy Manager uses this to redirect previously merged terms to their new term. If you do not need this feature or if you want to used Panels 3 / Taxonomy Breadcrumb, you can disable it under Administer \u003e Site Configuration \u003e Taxonomy Manager. See this issue for more information.\nNote: since 6.x-2.1, the redirect of taxonomy/term is disabled by default","type":"DESCRIPTION"}],"versions":[{"documentsid":0,"version":"7.x-1.0-beta2","url":"/modules/tech-phpdru7/files/mod_taxonomy_manager_7.x-1.0-beta2/7.x-1.0-beta2/mod_taxonomy_manager_7.x-1.0-beta2-7.x-1.0-beta2.tar.gz","modulesid":0}]},{"id":"mod_taxonomy_subterms__7.x-1.x-dev","name":"Taxonomy subterms ","core":true,"required":false,"docs":[{"content":"Taxonomy Subterms is a simple module to force display child taxonomy terms on the parent taxonomy page of nodes belonging to the current term or/and the children of the current term.","type":"HELP_TEXT"},{"content":"Taxonomy Subterms is a simple module to force display child taxonomy terms on the parent taxonomy page of nodes belonging to the current term or/and the children of the current term.\n\nTaxonomy subterms makes use of the exact same page callback of the default taxonomy terms page (or the one you put in place).\nThe module just add the depth param with an \u0027all\u0027 value to the original arguments and pass them to the \"normal\" page callback.","type":"DESCRIPTION"}],"versions":[{"documentsid":0,"version":"7.x-1.x-dev","url":"/modules/tech-phpdru7/files/mod_taxonomy_subterms__7.x-1.x-dev/7.x-1.x-dev/mod_taxonomy_subterms__7.x-1.x-dev-7.x-1.x-dev.tar.gz","modulesid":0}]},{"id":"mod_ubercart_7.x-3.0-rc2","name":"Ubercart","core":true,"required":false,"docs":[{"content":"Ubercart out of the box is a great solution for stores that sell physical goods, digital product downloads, and site memberships.","type":"HELP_TEXT"},{"content":"Ubercart out of the box is a great solution for stores that sell physical goods, digital product downloads, and site memberships.\n\nCurrent Features:\n\n\n\nConfigurable product catalog includes catalog pages and a block to display product categories.\nFlexible product creation system with product classes.\nMultiple product image support out of the box.\nFlexible product attributes system.\nBasic product stock level tracking and notification.\nProduct features to add file downloads, role promotions, and more to products.\nSingle page checkout.\nAutomatic account generation (anonymous checkout).\nCustomer and administrator checkout notifications.\nSimple order processing (with workflow for automated order processing).\nSimple order creation and editing.\nIntegrated payment system that acts as a bridge between acceptable payment methods (check, credit card, purchase order, etc.) and payment gateways (CyberSource, Authorize.net, PayPal, etc.).\nShipping quotes and fulfillment, including integration with UPS, FedEx, USPS.\nSales, product, and customer reports.\nActivity logging.\nMuch more... and more to come.\n\nUbercart is PayPal certified and integrates PayPal Website Payments Standard, Website Payments Pro, and Express Checkout. For more information, you can read the Ubercart PayPal information page.","type":"DESCRIPTION"}],"versions":[{"dependentModules":[{"id":"mod_rules_7.x-2.0-rc2","name":"Rules","core":true,"required":false,"docs":[{"content":"The rules module allows site administrators to define conditionally executed actions based on occurring events (known as reactive or ECA rules). It\u0027s a replacement with more features for the trigger module in core and the successor of the Drupal 5 workflow-ng module.The rules modules allows site administrators to define conditionally executed actions based on occurring events","type":"HELP_TEXT"},{"content":"The rules module allows site administrators to define conditionally executed actions based on occurring events (known as reactive or ECA rules). It\u0027s a replacement with more features for the trigger module in core and the successor of the Drupal 5 workflow-ng module.It allows site administrators to define conditionally executed actions based on occurring events.\n\nFeatures\n\nObviously, you may use reaction rules to react upon any event with custom conditions and actions.\nAllows functionality to be re-used via components (Drupal 6: Rule sets only).\nFlexible scheduling system that allows scheduling any component / action.\nUsers can share their customizations by using the built-in import/export feature. For that the module also integrates with Features.\nModular input evaluation system - for example you can install the Token module and use it in every action.\nThe module has been developed with site performance in mind, so it makes use of caching routines to speed up rule evaluation.\nRules 2.x (Drupal 7 only) features improved APIs, a new admin UI, support for all entity types, parameter configuration via simple data selection (i.e. just pass node:author as argument) and much more. See this blog post for more details.\n","type":"DESCRIPTION"}],"versions":[{"dependentModules":[{"id":"mod_menu_admin_per_menu_7.x-1.0","name":"Menu Admin per Menu","core":true,"required":false,"docs":[{"content":"Allows administrators to customize the site navigation menu.","type":"HELP_TEXT"},{"content":"By default, Drupal allows only users with \"administrer menu permission\" to add, modify or delete menu items.\nIn case you want for instance to let certain users manage primary links or secondary links but not navigation menu, this module provides this functionality.\n\nInstallation\n\nCopy the menu_admin_per_menu folder to your sites/all/modules directory.\nNavigate to admin/build/modules and enable the module\nNavigate to admin/user/permissions and set permissions for each role and each menu: \"administer \u0027menuname\u0027 menu items\"\n\nIf users with \"administer \u0027menuname\u0027 menu items\" permissions don\u0027t have the \"access administration pages\" permission,\nthey will not by default be able to see Navigation\u0027s \"Menus\" item (admin/build/menu).\nSo don\u0027t forget to move this item to the root of Navigation menu or somewhere else it can be seen by those users.\n","type":"DESCRIPTION"}],"versions":[{"documentsid":0,"version":"7.x-1.0","url":"/modules/tech-phpdru7/files/mod_menu_admin_per_menu_7.x-1.0/7.x-1.0/mod_menu_admin_per_menu_7.x-1.0-7.x-1.0.tar.gz","modulesid":0}]}],"documentsid":0,"version":"7.x-2.0-rc2","url":"/modules/tech-phpdru7/files/mod_rules_7.x-2.0-rc2/7.x-2.0-rc2/mod_rules_7.x-2.0-rc2-7.x-2.0-rc2.tar.gz","modulesid":0}]},{"id":"mod_views_7.x-3.0-rc1","name":"Views","core":true,"required":false,"docs":[{"content":"The Views module provides a flexible method for Drupal site designers to control how lists and tables of content (nodes in Views 1, almost anything in Views 2) are presented. Traditionally, Drupal has hard-coded most of this, particularly in how taxonomy and tracker lists are formatted.","type":"HELP_TEXT"},{"content":"This module provides a flexible method for Drupal site designers to control how lists and tables of content are presented. \n\nWhen installing Views on Drupal 7, you should have the current stable version of CTools (currently rc1) and you may need to flush cache as much as twice. There are currently issues with core\u0027s cache flushing that means one cache flush isn\u0027t necessarily enough.\nWhat is Views\n\nThe Views module provides a flexible method for Drupal site designers to control how lists and tables of content (nodes in Views 1, almost anything in Views 2) are presented. Traditionally, Drupal has hard-coded most of this, particularly in how taxonomy and tracker lists are formatted.\n\nThis tool is essentially a smart query builder that, given enough information, can build the proper query, execute it, and display the results. It has four modes, plus a special mode, and provides an impressive amount of functionality from these modes.\n\nAmong other things, Views can be used to generate reports, create summaries, and display collections of images and other content.\nYou need Views if\n\nYou like the default front page view, but you find you want to sort it differently.\nYou like the default taxonomy/term view, but you find you want to sort it differently; for example, alphabetically.\nYou use /tracker, but you want to restrict it to posts of a certain type.\nYou like the idea of the \u0027article\u0027 module, but it doesn\u0027t display articles the way you like.\nYou want a way to display a block with the 5 most recent posts of some particular type.\nYou want to provide \u0027unread forum posts\u0027.\nYou want a monthly archive similar to the typical Movable Type/Wordpress archives that displays a link to the in the form of \"Month, YYYY (X)\" where X is the number of posts that month, and displays them in a block. The links lead to a simple list of posts for that month. \n\nViews can do a lot more than that, but those are some of the obvious uses of Views.\nDependencies\n\nThe Drupal 7 version of Views requires the Chaos Tool Suite also known as CTools.\nViews\u0027 bug squad\n\nThe Views\u0027 bug squad is a group of people who have dedicated a few hours a week to help provide support and fix bugs in the issue queue. They are the first line for answering questions and properly filing issues. Anyone who wishes to join the Bug Squad to help others may do so to help contribute to the Drupal community!\nViews documentation\n\nViews 1\nViews 2 (This link goes to the Advanced Help project page. All Views documentation is included with its installation. For your convenience, you may also visit http://views-help.doc.logrus.com. This site may or may not be fully up to date at any given time.)\nViews 2 API (doxygen generated from Views 2 source. Only useful to developers.)\nViews 3 documentation hasn\u0027t been written yet. Items of note are:\nOnly UID1 can import a View.\n\n","type":"DESCRIPTION"}],"versions":[{"dependentModules":[{"id":"mod_chaos_tool_suite_7.x-1.0-rc1","name":"Chaos tool suite","core":true,"required":false,"docs":[{"content":"This suite is primarily a set of APIs and tools to improve the developer experience. It also contains a module called the Page Manager whose job is to manage pages. In particular it manages panel pages, but as it grows it will be able to manage far more than just Panels.A library of helpful tools by Merlin of Chaos.","type":"HELP_TEXT"},{"content":"This suite is primarily a set of APIs and tools to improve the developer experience. It also contains a module called the Page Manager whose job is to manage pages. In particular it manages panel pages, but as it grows it will be able to manage far more than just Panels..A library of helpful tools by Merlin of Chaos.For the moment, it includes the following tools:\n\n    Plugins -- tools to make it easy for modules to let other modules implement plugins from .inc files.\n    Exportables -- tools to make it easier for modules to have objects that live in database or live in code, such as \u0027default views\u0027.\n    AJAX responder -- tools to make it easier for the server to handle AJAX requests and tell the client what to do with them.\n    Form tools -- tools to make it easier for forms to deal with AJAX.\n    Object caching -- tool to make it easier to edit an object across multiple page requests and cache the editing work.\n    Contexts -- the notion of wrapping objects in a unified wrapper and providing an API to create and accept these contexts as input.\n    Modal dialog -- tool to make it simple to put a form in a modal dialog.\n    Dependent -- a simple form widget to make form items appear and disappear based upon the selections in another item.\n    Content -- pluggable content types used as panes in Panels and other modules like Dashboard.\n    Form wizard -- an API to make multi-step forms much easier.\n    CSS tools -- tools to cache and sanitize CSS easily to make user-input CSS safe.\n","type":"DESCRIPTION"}],"versions":[{"documentsid":0,"version":"7.x-1.0-rc1","url":"/modules/tech-phpdru7/files/mod_chaos_tool_suite_7.x-1.0-rc1/7.x-1.0-rc1/mod_chaos_tool_suite_7.x-1.0-rc1-7.x-1.0-rc1.zip","modulesid":0}]}],"documentsid":0,"version":"7.x-3.0-rc1","url":"/modules/tech-phpdru7/files/mod_views_7.x-3.0-rc1/7.x-3.0-rc1/mod_views_7.x-3.0-rc1-7.x-3.0-rc1.tar.gz","modulesid":0}]},{"id":"mod_chaos_tool_suite_7.x-1.0-rc1","name":"Chaos tool suite","core":true,"required":false,"docs":[{"content":"This suite is primarily a set of APIs and tools to improve the developer experience. It also contains a module called the Page Manager whose job is to manage pages. In particular it manages panel pages, but as it grows it will be able to manage far more than just Panels.A library of helpful tools by Merlin of Chaos.","type":"HELP_TEXT"},{"content":"This suite is primarily a set of APIs and tools to improve the developer experience. It also contains a module called the Page Manager whose job is to manage pages. In particular it manages panel pages, but as it grows it will be able to manage far more than just Panels..A library of helpful tools by Merlin of Chaos.For the moment, it includes the following tools:\n\n    Plugins -- tools to make it easy for modules to let other modules implement plugins from .inc files.\n    Exportables -- tools to make it easier for modules to have objects that live in database or live in code, such as \u0027default views\u0027.\n    AJAX responder -- tools to make it easier for the server to handle AJAX requests and tell the client what to do with them.\n    Form tools -- tools to make it easier for forms to deal with AJAX.\n    Object caching -- tool to make it easier to edit an object across multiple page requests and cache the editing work.\n    Contexts -- the notion of wrapping objects in a unified wrapper and providing an API to create and accept these contexts as input.\n    Modal dialog -- tool to make it simple to put a form in a modal dialog.\n    Dependent -- a simple form widget to make form items appear and disappear based upon the selections in another item.\n    Content -- pluggable content types used as panes in Panels and other modules like Dashboard.\n    Form wizard -- an API to make multi-step forms much easier.\n    CSS tools -- tools to cache and sanitize CSS easily to make user-input CSS safe.\n","type":"DESCRIPTION"}],"versions":[{"documentsid":0,"version":"7.x-1.0-rc1","url":"/modules/tech-phpdru7/files/mod_chaos_tool_suite_7.x-1.0-rc1/7.x-1.0-rc1/mod_chaos_tool_suite_7.x-1.0-rc1-7.x-1.0-rc1.zip","modulesid":0}]},{"id":"mod_entity_api_7.x-1.0-rc1","name":"Entity API","core":true,"required":false,"docs":[{"content":"Enables modules to work with any entity type and to provide entities.\n\nThis module extends the entity API of Drupal core in order to provide a unified way to deal with entities and their properties. Additionally, it provides an entity CRUD controller, which helps simplifying the creation of new entity types.","type":"HELP_TEXT"},{"content":"It enables modules to work with any entity type and to provide entities.\n\nThis module extends the entity API of Drupal core in order to provide a unified way to deal with entities and their properties. Additionally, it provides an entity CRUD controller, which helps simplifying the creation of new entity types.\n\nFeatures\n\nThis is an API module, so it doesn\u0027t provide any end-user features. However, users may enable the entity tokens module, which provides token replacements for all entity properties that have no tokens and are known to the entity API.\n\nOverview\n\nThe module provides API functions allowing modules to create, save, delete, view or to determine access for any entity, i.e. entity_create(), entity_save(), entity_delete(), entity_view() and entity_access().\n\nThe entity API introduces a unique place for metadata about entity relationships and entity properties: hook_entity_property_info(). This information about entity properties contains the data type and callbacks for how to get and set the data of a property. Modules may rely on this information in order to support any entity property, e.g. Rules and the Search API build upon that.\n\nFurthermore the module provides data wrappers that make use of the available information to provide a simple and unified access to entities and their properties. For usage examples have a look at the README or the provided tests.\n\nBeside that, the module helps you defining a new entity type. For that, it provides an entity controller, which implements full CRUD functionality for your entities. Optionally, entities may be created based on classes derived from the provided Entity class.\n\nThe entity API cares about creating fieldable entities as well as exportable entities, however it does not yet support revisions. Additionally it supports implementing bundle entities, i.e. bundle objects (like node types) for fieldable entities implemented as (exportable) entities, for which the appropriate field API callbacks get automatically invoked.\n\nFor entity types implemented based upon the provided CRUD API the API is providing additional module integration too, i.e. Rules events are provided for all CRUD-related hooks, some basic entity property information for hook_entity_property_info() is provided and exportable entities are automatically integrated with the Features module.\n\nThese module integrations are implemented in separate controller classes, which may be separately overridden or enabled/deactivated.\nOptionally, the entity API also helps providing an administrative interface for managing entities, e.g. the UI for managing profile types of Profile 2 is built with that.\n","type":"DESCRIPTION"}],"versions":[{"documentsid":0,"version":"7.x-1.0-rc1","url":"/modules/tech-phpdru7/files/mod_entity_api_7.x-1.0-rc1/7.x-1.0-rc1/mod_entity_api_7.x-1.0-rc1-7.x-1.0-rc1.zip","modulesid":0}]}],"documentsid":0,"version":"7.x-3.0-rc2","url":"/modules/tech-phpdru7/files/mod_ubercart_7.x-3.0-rc2/7.x-3.0-rc2/mod_ubercart_7.x-3.0-rc2-7.x-3.0-rc2.tar.gz","modulesid":0}]},{"id":"mod_views_7.x-3.0-rc1","name":"Views","core":true,"required":false,"docs":[{"content":"The Views module provides a flexible method for Drupal site designers to control how lists and tables of content (nodes in Views 1, almost anything in Views 2) are presented. Traditionally, Drupal has hard-coded most of this, particularly in how taxonomy and tracker lists are formatted.","type":"HELP_TEXT"},{"content":"This module provides a flexible method for Drupal site designers to control how lists and tables of content are presented. \n\nWhen installing Views on Drupal 7, you should have the current stable version of CTools (currently rc1) and you may need to flush cache as much as twice. There are currently issues with core\u0027s cache flushing that means one cache flush isn\u0027t necessarily enough.\nWhat is Views\n\nThe Views module provides a flexible method for Drupal site designers to control how lists and tables of content (nodes in Views 1, almost anything in Views 2) are presented. Traditionally, Drupal has hard-coded most of this, particularly in how taxonomy and tracker lists are formatted.\n\nThis tool is essentially a smart query builder that, given enough information, can build the proper query, execute it, and display the results. It has four modes, plus a special mode, and provides an impressive amount of functionality from these modes.\n\nAmong other things, Views can be used to generate reports, create summaries, and display collections of images and other content.\nYou need Views if\n\nYou like the default front page view, but you find you want to sort it differently.\nYou like the default taxonomy/term view, but you find you want to sort it differently; for example, alphabetically.\nYou use /tracker, but you want to restrict it to posts of a certain type.\nYou like the idea of the \u0027article\u0027 module, but it doesn\u0027t display articles the way you like.\nYou want a way to display a block with the 5 most recent posts of some particular type.\nYou want to provide \u0027unread forum posts\u0027.\nYou want a monthly archive similar to the typical Movable Type/Wordpress archives that displays a link to the in the form of \"Month, YYYY (X)\" where X is the number of posts that month, and displays them in a block. The links lead to a simple list of posts for that month. \n\nViews can do a lot more than that, but those are some of the obvious uses of Views.\nDependencies\n\nThe Drupal 7 version of Views requires the Chaos Tool Suite also known as CTools.\nViews\u0027 bug squad\n\nThe Views\u0027 bug squad is a group of people who have dedicated a few hours a week to help provide support and fix bugs in the issue queue. They are the first line for answering questions and properly filing issues. Anyone who wishes to join the Bug Squad to help others may do so to help contribute to the Drupal community!\nViews documentation\n\nViews 1\nViews 2 (This link goes to the Advanced Help project page. All Views documentation is included with its installation. For your convenience, you may also visit http://views-help.doc.logrus.com. This site may or may not be fully up to date at any given time.)\nViews 2 API (doxygen generated from Views 2 source. Only useful to developers.)\nViews 3 documentation hasn\u0027t been written yet. Items of note are:\nOnly UID1 can import a View.\n\n","type":"DESCRIPTION"}],"versions":[{"dependentModules":[{"id":"mod_chaos_tool_suite_7.x-1.0-rc1","name":"Chaos tool suite","core":true,"required":false,"docs":[{"content":"This suite is primarily a set of APIs and tools to improve the developer experience. It also contains a module called the Page Manager whose job is to manage pages. In particular it manages panel pages, but as it grows it will be able to manage far more than just Panels.A library of helpful tools by Merlin of Chaos.","type":"HELP_TEXT"},{"content":"This suite is primarily a set of APIs and tools to improve the developer experience. It also contains a module called the Page Manager whose job is to manage pages. In particular it manages panel pages, but as it grows it will be able to manage far more than just Panels..A library of helpful tools by Merlin of Chaos.For the moment, it includes the following tools:\n\n    Plugins -- tools to make it easy for modules to let other modules implement plugins from .inc files.\n    Exportables -- tools to make it easier for modules to have objects that live in database or live in code, such as \u0027default views\u0027.\n    AJAX responder -- tools to make it easier for the server to handle AJAX requests and tell the client what to do with them.\n    Form tools -- tools to make it easier for forms to deal with AJAX.\n    Object caching -- tool to make it easier to edit an object across multiple page requests and cache the editing work.\n    Contexts -- the notion of wrapping objects in a unified wrapper and providing an API to create and accept these contexts as input.\n    Modal dialog -- tool to make it simple to put a form in a modal dialog.\n    Dependent -- a simple form widget to make form items appear and disappear based upon the selections in another item.\n    Content -- pluggable content types used as panes in Panels and other modules like Dashboard.\n    Form wizard -- an API to make multi-step forms much easier.\n    CSS tools -- tools to cache and sanitize CSS easily to make user-input CSS safe.\n","type":"DESCRIPTION"}],"versions":[{"documentsid":0,"version":"7.x-1.0-rc1","url":"/modules/tech-phpdru7/files/mod_chaos_tool_suite_7.x-1.0-rc1/7.x-1.0-rc1/mod_chaos_tool_suite_7.x-1.0-rc1-7.x-1.0-rc1.zip","modulesid":0}]}],"documentsid":0,"version":"7.x-3.0-rc1","url":"/modules/tech-phpdru7/files/mod_views_7.x-3.0-rc1/7.x-3.0-rc1/mod_views_7.x-3.0-rc1-7.x-3.0-rc1.tar.gz","modulesid":0}]},{"id":"mod_shopmenu_7.0","name":"shopmenu","core":false,"required":false,"docs":[{"content":"Provideds shopping cart menu and contains ubercart module altered forms.\n\nthe \"menu\" hook (shop_menu). For each merchant from whom I\u0027m using their datafeed, I make code like this in the shop_menu function: function shop_menu($may_cache) {   $items \u003d array();   if ($may_cache) { .... ...","type":"HELP_TEXT"},{"content":"Provideds shopping cart menu and contains ubercart module altered forms.\n\nthe \"menu\" hook (shop_menu). For each merchant from whom I\u0027m using their datafeed, I make code like this in the shop_menu function: function shop_menu($may_cache) {   $items \u003d array();   if ($may_cache) { .... ...","type":"DESCRIPTION"}],"versions":[{"dependentModules":[{"id":"mod_ubercart_7.x-3.0-rc2","name":"Ubercart","core":true,"required":false,"docs":[{"content":"Ubercart out of the box is a great solution for stores that sell physical goods, digital product downloads, and site memberships.","type":"HELP_TEXT"},{"content":"Ubercart out of the box is a great solution for stores that sell physical goods, digital product downloads, and site memberships.\n\nCurrent Features:\n\n\n\nConfigurable product catalog includes catalog pages and a block to display product categories.\nFlexible product creation system with product classes.\nMultiple product image support out of the box.\nFlexible product attributes system.\nBasic product stock level tracking and notification.\nProduct features to add file downloads, role promotions, and more to products.\nSingle page checkout.\nAutomatic account generation (anonymous checkout).\nCustomer and administrator checkout notifications.\nSimple order processing (with workflow for automated order processing).\nSimple order creation and editing.\nIntegrated payment system that acts as a bridge between acceptable payment methods (check, credit card, purchase order, etc.) and payment gateways (CyberSource, Authorize.net, PayPal, etc.).\nShipping quotes and fulfillment, including integration with UPS, FedEx, USPS.\nSales, product, and customer reports.\nActivity logging.\nMuch more... and more to come.\n\nUbercart is PayPal certified and integrates PayPal Website Payments Standard, Website Payments Pro, and Express Checkout. For more information, you can read the Ubercart PayPal information page.","type":"DESCRIPTION"}],"versions":[{"dependentModules":[{"id":"mod_rules_7.x-2.0-rc2","name":"Rules","core":true,"required":false,"docs":[{"content":"The rules module allows site administrators to define conditionally executed actions based on occurring events (known as reactive or ECA rules). It\u0027s a replacement with more features for the trigger module in core and the successor of the Drupal 5 workflow-ng module.The rules modules allows site administrators to define conditionally executed actions based on occurring events","type":"HELP_TEXT"},{"content":"The rules module allows site administrators to define conditionally executed actions based on occurring events (known as reactive or ECA rules). It\u0027s a replacement with more features for the trigger module in core and the successor of the Drupal 5 workflow-ng module.It allows site administrators to define conditionally executed actions based on occurring events.\n\nFeatures\n\nObviously, you may use reaction rules to react upon any event with custom conditions and actions.\nAllows functionality to be re-used via components (Drupal 6: Rule sets only).\nFlexible scheduling system that allows scheduling any component / action.\nUsers can share their customizations by using the built-in import/export feature. For that the module also integrates with Features.\nModular input evaluation system - for example you can install the Token module and use it in every action.\nThe module has been developed with site performance in mind, so it makes use of caching routines to speed up rule evaluation.\nRules 2.x (Drupal 7 only) features improved APIs, a new admin UI, support for all entity types, parameter configuration via simple data selection (i.e. just pass node:author as argument) and much more. See this blog post for more details.\n","type":"DESCRIPTION"}],"versions":[{"dependentModules":[{"id":"mod_menu_admin_per_menu_7.x-1.0","name":"Menu Admin per Menu","core":true,"required":false,"docs":[{"content":"Allows administrators to customize the site navigation menu.","type":"HELP_TEXT"},{"content":"By default, Drupal allows only users with \"administrer menu permission\" to add, modify or delete menu items.\nIn case you want for instance to let certain users manage primary links or secondary links but not navigation menu, this module provides this functionality.\n\nInstallation\n\nCopy the menu_admin_per_menu folder to your sites/all/modules directory.\nNavigate to admin/build/modules and enable the module\nNavigate to admin/user/permissions and set permissions for each role and each menu: \"administer \u0027menuname\u0027 menu items\"\n\nIf users with \"administer \u0027menuname\u0027 menu items\" permissions don\u0027t have the \"access administration pages\" permission,\nthey will not by default be able to see Navigation\u0027s \"Menus\" item (admin/build/menu).\nSo don\u0027t forget to move this item to the root of Navigation menu or somewhere else it can be seen by those users.\n","type":"DESCRIPTION"}],"versions":[{"documentsid":0,"version":"7.x-1.0","url":"/modules/tech-phpdru7/files/mod_menu_admin_per_menu_7.x-1.0/7.x-1.0/mod_menu_admin_per_menu_7.x-1.0-7.x-1.0.tar.gz","modulesid":0}]}],"documentsid":0,"version":"7.x-2.0-rc2","url":"/modules/tech-phpdru7/files/mod_rules_7.x-2.0-rc2/7.x-2.0-rc2/mod_rules_7.x-2.0-rc2-7.x-2.0-rc2.tar.gz","modulesid":0}]},{"id":"mod_views_7.x-3.0-rc1","name":"Views","core":true,"required":false,"docs":[{"content":"The Views module provides a flexible method for Drupal site designers to control how lists and tables of content (nodes in Views 1, almost anything in Views 2) are presented. Traditionally, Drupal has hard-coded most of this, particularly in how taxonomy and tracker lists are formatted.","type":"HELP_TEXT"},{"content":"This module provides a flexible method for Drupal site designers to control how lists and tables of content are presented. \n\nWhen installing Views on Drupal 7, you should have the current stable version of CTools (currently rc1) and you may need to flush cache as much as twice. There are currently issues with core\u0027s cache flushing that means one cache flush isn\u0027t necessarily enough.\nWhat is Views\n\nThe Views module provides a flexible method for Drupal site designers to control how lists and tables of content (nodes in Views 1, almost anything in Views 2) are presented. Traditionally, Drupal has hard-coded most of this, particularly in how taxonomy and tracker lists are formatted.\n\nThis tool is essentially a smart query builder that, given enough information, can build the proper query, execute it, and display the results. It has four modes, plus a special mode, and provides an impressive amount of functionality from these modes.\n\nAmong other things, Views can be used to generate reports, create summaries, and display collections of images and other content.\nYou need Views if\n\nYou like the default front page view, but you find you want to sort it differently.\nYou like the default taxonomy/term view, but you find you want to sort it differently; for example, alphabetically.\nYou use /tracker, but you want to restrict it to posts of a certain type.\nYou like the idea of the \u0027article\u0027 module, but it doesn\u0027t display articles the way you like.\nYou want a way to display a block with the 5 most recent posts of some particular type.\nYou want to provide \u0027unread forum posts\u0027.\nYou want a monthly archive similar to the typical Movable Type/Wordpress archives that displays a link to the in the form of \"Month, YYYY (X)\" where X is the number of posts that month, and displays them in a block. The links lead to a simple list of posts for that month. \n\nViews can do a lot more than that, but those are some of the obvious uses of Views.\nDependencies\n\nThe Drupal 7 version of Views requires the Chaos Tool Suite also known as CTools.\nViews\u0027 bug squad\n\nThe Views\u0027 bug squad is a group of people who have dedicated a few hours a week to help provide support and fix bugs in the issue queue. They are the first line for answering questions and properly filing issues. Anyone who wishes to join the Bug Squad to help others may do so to help contribute to the Drupal community!\nViews documentation\n\nViews 1\nViews 2 (This link goes to the Advanced Help project page. All Views documentation is included with its installation. For your convenience, you may also visit http://views-help.doc.logrus.com. This site may or may not be fully up to date at any given time.)\nViews 2 API (doxygen generated from Views 2 source. Only useful to developers.)\nViews 3 documentation hasn\u0027t been written yet. Items of note are:\nOnly UID1 can import a View.\n\n","type":"DESCRIPTION"}],"versions":[{"dependentModules":[{"id":"mod_chaos_tool_suite_7.x-1.0-rc1","name":"Chaos tool suite","core":true,"required":false,"docs":[{"content":"This suite is primarily a set of APIs and tools to improve the developer experience. It also contains a module called the Page Manager whose job is to manage pages. In particular it manages panel pages, but as it grows it will be able to manage far more than just Panels.A library of helpful tools by Merlin of Chaos.","type":"HELP_TEXT"},{"content":"This suite is primarily a set of APIs and tools to improve the developer experience. It also contains a module called the Page Manager whose job is to manage pages. In particular it manages panel pages, but as it grows it will be able to manage far more than just Panels..A library of helpful tools by Merlin of Chaos.For the moment, it includes the following tools:\n\n    Plugins -- tools to make it easy for modules to let other modules implement plugins from .inc files.\n    Exportables -- tools to make it easier for modules to have objects that live in database or live in code, such as \u0027default views\u0027.\n    AJAX responder -- tools to make it easier for the server to handle AJAX requests and tell the client what to do with them.\n    Form tools -- tools to make it easier for forms to deal with AJAX.\n    Object caching -- tool to make it easier to edit an object across multiple page requests and cache the editing work.\n    Contexts -- the notion of wrapping objects in a unified wrapper and providing an API to create and accept these contexts as input.\n    Modal dialog -- tool to make it simple to put a form in a modal dialog.\n    Dependent -- a simple form widget to make form items appear and disappear based upon the selections in another item.\n    Content -- pluggable content types used as panes in Panels and other modules like Dashboard.\n    Form wizard -- an API to make multi-step forms much easier.\n    CSS tools -- tools to cache and sanitize CSS easily to make user-input CSS safe.\n","type":"DESCRIPTION"}],"versions":[{"documentsid":0,"version":"7.x-1.0-rc1","url":"/modules/tech-phpdru7/files/mod_chaos_tool_suite_7.x-1.0-rc1/7.x-1.0-rc1/mod_chaos_tool_suite_7.x-1.0-rc1-7.x-1.0-rc1.zip","modulesid":0}]}],"documentsid":0,"version":"7.x-3.0-rc1","url":"/modules/tech-phpdru7/files/mod_views_7.x-3.0-rc1/7.x-3.0-rc1/mod_views_7.x-3.0-rc1-7.x-3.0-rc1.tar.gz","modulesid":0}]},{"id":"mod_chaos_tool_suite_7.x-1.0-rc1","name":"Chaos tool suite","core":true,"required":false,"docs":[{"content":"This suite is primarily a set of APIs and tools to improve the developer experience. It also contains a module called the Page Manager whose job is to manage pages. In particular it manages panel pages, but as it grows it will be able to manage far more than just Panels.A library of helpful tools by Merlin of Chaos.","type":"HELP_TEXT"},{"content":"This suite is primarily a set of APIs and tools to improve the developer experience. It also contains a module called the Page Manager whose job is to manage pages. In particular it manages panel pages, but as it grows it will be able to manage far more than just Panels..A library of helpful tools by Merlin of Chaos.For the moment, it includes the following tools:\n\n    Plugins -- tools to make it easy for modules to let other modules implement plugins from .inc files.\n    Exportables -- tools to make it easier for modules to have objects that live in database or live in code, such as \u0027default views\u0027.\n    AJAX responder -- tools to make it easier for the server to handle AJAX requests and tell the client what to do with them.\n    Form tools -- tools to make it easier for forms to deal with AJAX.\n    Object caching -- tool to make it easier to edit an object across multiple page requests and cache the editing work.\n    Contexts -- the notion of wrapping objects in a unified wrapper and providing an API to create and accept these contexts as input.\n    Modal dialog -- tool to make it simple to put a form in a modal dialog.\n    Dependent -- a simple form widget to make form items appear and disappear based upon the selections in another item.\n    Content -- pluggable content types used as panes in Panels and other modules like Dashboard.\n    Form wizard -- an API to make multi-step forms much easier.\n    CSS tools -- tools to cache and sanitize CSS easily to make user-input CSS safe.\n","type":"DESCRIPTION"}],"versions":[{"documentsid":0,"version":"7.x-1.0-rc1","url":"/modules/tech-phpdru7/files/mod_chaos_tool_suite_7.x-1.0-rc1/7.x-1.0-rc1/mod_chaos_tool_suite_7.x-1.0-rc1-7.x-1.0-rc1.zip","modulesid":0}]},{"id":"mod_entity_api_7.x-1.0-rc1","name":"Entity API","core":true,"required":false,"docs":[{"content":"Enables modules to work with any entity type and to provide entities.\n\nThis module extends the entity API of Drupal core in order to provide a unified way to deal with entities and their properties. Additionally, it provides an entity CRUD controller, which helps simplifying the creation of new entity types.","type":"HELP_TEXT"},{"content":"It enables modules to work with any entity type and to provide entities.\n\nThis module extends the entity API of Drupal core in order to provide a unified way to deal with entities and their properties. Additionally, it provides an entity CRUD controller, which helps simplifying the creation of new entity types.\n\nFeatures\n\nThis is an API module, so it doesn\u0027t provide any end-user features. However, users may enable the entity tokens module, which provides token replacements for all entity properties that have no tokens and are known to the entity API.\n\nOverview\n\nThe module provides API functions allowing modules to create, save, delete, view or to determine access for any entity, i.e. entity_create(), entity_save(), entity_delete(), entity_view() and entity_access().\n\nThe entity API introduces a unique place for metadata about entity relationships and entity properties: hook_entity_property_info(). This information about entity properties contains the data type and callbacks for how to get and set the data of a property. Modules may rely on this information in order to support any entity property, e.g. Rules and the Search API build upon that.\n\nFurthermore the module provides data wrappers that make use of the available information to provide a simple and unified access to entities and their properties. For usage examples have a look at the README or the provided tests.\n\nBeside that, the module helps you defining a new entity type. For that, it provides an entity controller, which implements full CRUD functionality for your entities. Optionally, entities may be created based on classes derived from the provided Entity class.\n\nThe entity API cares about creating fieldable entities as well as exportable entities, however it does not yet support revisions. Additionally it supports implementing bundle entities, i.e. bundle objects (like node types) for fieldable entities implemented as (exportable) entities, for which the appropriate field API callbacks get automatically invoked.\n\nFor entity types implemented based upon the provided CRUD API the API is providing additional module integration too, i.e. Rules events are provided for all CRUD-related hooks, some basic entity property information for hook_entity_property_info() is provided and exportable entities are automatically integrated with the Features module.\n\nThese module integrations are implemented in separate controller classes, which may be separately overridden or enabled/deactivated.\nOptionally, the entity API also helps providing an administrative interface for managing entities, e.g. the UI for managing profile types of Profile 2 is built with that.\n","type":"DESCRIPTION"}],"versions":[{"documentsid":0,"version":"7.x-1.0-rc1","url":"/modules/tech-phpdru7/files/mod_entity_api_7.x-1.0-rc1/7.x-1.0-rc1/mod_entity_api_7.x-1.0-rc1-7.x-1.0-rc1.zip","modulesid":0}]}],"documentsid":0,"version":"7.x-3.0-rc2","url":"/modules/tech-phpdru7/files/mod_ubercart_7.x-3.0-rc2/7.x-3.0-rc2/mod_ubercart_7.x-3.0-rc2-7.x-3.0-rc2.tar.gz","modulesid":0}]}],"documentsid":0,"version":"7.0","url":"/modules/tech-phpdru7/files/mod_shopmenu_7.0/7.0/mod_shopmenu_7.0-7.0.zip","modulesid":0}]}],"servers":[{"id":5,"name":"Apache","versions":["2.3"],"description":"Apache"}],"databases":[{"id":1,"name":"MySQL","versions":["5.5.1"],"description":"My SQL DB"}],"emailSupported":false},"application":"apptype-webapp","pilotProjectName":"EShop","projectCode":""}